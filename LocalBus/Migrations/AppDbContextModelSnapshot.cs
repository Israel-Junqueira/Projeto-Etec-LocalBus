// <auto-generated />
using System;
using LocalBus.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LocalBus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LocalBus.Models.Escola", b =>
                {
                    b.Property<int>("EscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscolaId"), 1L, 1);

                    b.Property<int>("CodigoDaEtec")
                        .HasColumnType("int");

                    b.Property<string>("EmailDaEscola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefoneDaEscola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EscolaId");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("LocalBus.Models.EscolaPonto", b =>
                {
                    b.Property<int>("EscolaPontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscolaPontoId"), 1L, 1);

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("PontoId")
                        .HasColumnType("int");

                    b.HasKey("EscolaPontoId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("PontoId");

                    b.ToTable("EscolasPontos");
                });

            modelBuilder.Entity("LocalBus.Models.ImagemEscola", b =>
                {
                    b.Property<int>("ImagemEscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagemEscolaId"), 1L, 1);

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("ImagemId")
                        .HasColumnType("int");

                    b.HasKey("ImagemEscolaId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("ImagemId");

                    b.ToTable("ImagemEscola");
                });

            modelBuilder.Entity("LocalBus.Models.Ponto", b =>
                {
                    b.Property<int>("PontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PontoId"), 1L, 1);

                    b.Property<bool>("AtivoPonto")
                        .HasColumnType("bit");

                    b.Property<string>("DescriçãoPonto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LongitudePonto")
                        .HasColumnType("float");

                    b.Property<double>("latitudePonto")
                        .HasColumnType("float");

                    b.HasKey("PontoId");

                    b.ToTable("Pontos");
                });

            modelBuilder.Entity("LocalBus.Models.TipoImagem", b =>
                {
                    b.Property<int>("TipoImagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoImagemId"), 1L, 1);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extencao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("TipoImagemId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("LocalBus.Models.EscolaPonto", b =>
                {
                    b.HasOne("LocalBus.Models.Escola", "Escola")
                        .WithMany("Escola_Ponto")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalBus.Models.Ponto", "Ponto")
                        .WithMany("Escolas_Ponto")
                        .HasForeignKey("PontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Ponto");
                });

            modelBuilder.Entity("LocalBus.Models.ImagemEscola", b =>
                {
                    b.HasOne("LocalBus.Models.Escola", "Escola")
                        .WithMany("ImagemEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalBus.Models.TipoImagem", "TipoImagem")
                        .WithMany("ImagemEscola")
                        .HasForeignKey("ImagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("TipoImagem");
                });

            modelBuilder.Entity("LocalBus.Models.Escola", b =>
                {
                    b.Navigation("Escola_Ponto");

                    b.Navigation("ImagemEscolas");
                });

            modelBuilder.Entity("LocalBus.Models.Ponto", b =>
                {
                    b.Navigation("Escolas_Ponto");
                });

            modelBuilder.Entity("LocalBus.Models.TipoImagem", b =>
                {
                    b.Navigation("ImagemEscola");
                });
#pragma warning restore 612, 618
        }
    }
}
