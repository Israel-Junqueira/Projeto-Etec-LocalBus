// <auto-generated />
using LocalBus.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LocalBus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220326165515_Localbus1")]
    partial class Localbus1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LocalBus.Models.Administrador", b =>
                {
                    b.Property<int>("AdministradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministradorId"), 1L, 1);

                    b.Property<string>("CPFAdministrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAdministrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAdministrador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneAdmnistrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdministradorId");

                    b.HasIndex("EscolaId");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("LocalBus.Models.Escola", b =>
                {
                    b.Property<int>("EscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscolaId"), 1L, 1);

                    b.Property<int>("CodigoDaEtec")
                        .HasColumnType("int");

                    b.Property<string>("EmailDaEscola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefoneDaEscola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EscolaId");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("LocalBus.Models.EscolaPonto", b =>
                {
                    b.Property<int>("EscolaPontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscolaPontoId"), 1L, 1);

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("PontoId")
                        .HasColumnType("int");

                    b.HasKey("EscolaPontoId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("PontoId");

                    b.ToTable("EscolasPontos");
                });

            modelBuilder.Entity("LocalBus.Models.Ponto", b =>
                {
                    b.Property<int>("PontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PontoId"), 1L, 1);

                    b.Property<bool>("AtivoPonto")
                        .HasColumnType("bit");

                    b.Property<string>("DescriçãoPonto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LongitudePonto")
                        .HasColumnType("float");

                    b.Property<double>("latitudePonto")
                        .HasColumnType("float");

                    b.HasKey("PontoId");

                    b.ToTable("Pontos");
                });

            modelBuilder.Entity("LocalBus.Models.Administrador", b =>
                {
                    b.HasOne("LocalBus.Models.Escola", "Escola")
                        .WithMany("Administradors")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("LocalBus.Models.EscolaPonto", b =>
                {
                    b.HasOne("LocalBus.Models.Escola", "Escola")
                        .WithMany("Escola_Ponto")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalBus.Models.Ponto", "Ponto")
                        .WithMany("Escolas_Ponto")
                        .HasForeignKey("PontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Ponto");
                });

            modelBuilder.Entity("LocalBus.Models.Escola", b =>
                {
                    b.Navigation("Administradors");

                    b.Navigation("Escola_Ponto");
                });

            modelBuilder.Entity("LocalBus.Models.Ponto", b =>
                {
                    b.Navigation("Escolas_Ponto");
                });
#pragma warning restore 612, 618
        }
    }
}
